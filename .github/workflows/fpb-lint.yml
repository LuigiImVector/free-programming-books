name: free-programming-books-lint

on: [push, pull_request]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
<<<<<<< HEAD
=======
    - name: Use Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'
>>>>>>> cd1d5e81ee74b761220880d2f23283bd69bfeff5
    - name: Use Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '16.x'
    - run: npm install -g free-programming-books-lint
      
    - name: Push
      if: ${{ github.event_name == 'push' }}
      run: |
        fpb-lint ./books/
        fpb-lint ./casts/
        fpb-lint ./courses/
        fpb-lint ./more/

    - name: Pull Request
      if: ${{ always() && 
          github.event_name == 'pull_request' }}
      run: |
        fpb-lint ./books/ &>> output.log || echo "Analyzing..."
        fpb-lint ./casts/ &>> output.log || echo "Analyzing..."
        fpb-lint ./courses/ &>> output.log || echo "Analyzing..."
        fpb-lint ./more/ &>> output.log || echo "Analyzing..."

<<<<<<< HEAD
        touch error.log
=======
        cat > error.log
>>>>>>> cd1d5e81ee74b761220880d2f23283bd69bfeff5

    - name: Clean output
      if: ${{ always() && 
          github.event_name == 'pull_request' }}
      uses: actions/github-script@v6
      with:
        script: |
          const fs = require('fs');
          const readline = require('readline');

          const file = readline.createInterface({
            input: fs.createReadStream('output.log'),
            output: process.stdout,
            terminal: false,
          });

          let lastLine = '';
          file.on('line', (line) => {
            if (lastLine) {
              fs.appendFile('error.log', lastLine, (err) => {
                if (err) {
                  console.error(err);
                }
              });
            }

            if (line.includes('/home/runner/work/free-programming-books/')) {
              lastLine = line.replace('/home/runner/work/free-programming-books/', '') + "\r\n"; 
            } else if (line.includes('\u26a0')) {
              lastLine = '\r\n\r\n';
            } else if (line.includes('remark-lint')) {
              lastLine = line + '\r\n';
            } else {
              lastLine = null;
            }
          });
          
          file.on('close', () => {
            if (!lastLine || lastLine === '\r\n\r\n') {
              return;
            }
            
            fs.appendFile('error.log', lastLine, (err) => {
              if (err) {
                console.error(err);
              }
            });
          });
    
    - name: Upload artifact
      if: ${{ always() && 
          github.event_name == 'pull_request' }}
      run: |
<<<<<<< HEAD
          mkdir -P ./PR
          echo ${{ github.event.pull_request.html_url }} > ./pr/PRurl
          mv error.log ./PR/error.log
    - uses: actions/upload-artifact@v3
      with:
        name: pr
        path: pr/
=======
          cat error.log

          if [ -s error.log ]
          then
            gh pr review $PR -r -b "Linter failed, fix the error(s):
            \`\`\`
            $(cat error.log)
            \`\`\`"
            gh pr edit $PR --add-label "linter error"
          else
            gh pr review $PR -a
            gh pr edit $PR --remove-label "linter error"
          fi
>>>>>>> cd1d5e81ee74b761220880d2f23283bd69bfeff5
